<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.niyu.mapper.RepliesMapper">
  <resultMap id="BaseResultMap" type="com.niyu.pojo.Replies">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="dislike" jdbcType="INTEGER" property="dislike" />
    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, content, post_id, uid, dislike, post_time, likes
  </sql>
  <select id="selectByExample" parameterType="com.niyu.pojo.RepliesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from replies
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from replies
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.niyu.pojo.RepliesExample">
    delete from replies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niyu.pojo.Replies">
    insert into replies (id, content, post_id, 
      uid, dislike, post_time, 
      likes)
    values (#{id,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{postId,jdbcType=VARCHAR}, 
      #{uid,jdbcType=VARCHAR}, #{dislike,jdbcType=INTEGER}, #{postTime,jdbcType=TIMESTAMP}, 
      #{likes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niyu.pojo.Replies">
    insert into replies
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="dislike != null">
        dislike,
      </if>
      <if test="postTime != null">
        post_time,
      </if>
      <if test="likes != null">
        likes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="dislike != null">
        #{dislike,jdbcType=INTEGER},
      </if>
      <if test="postTime != null">
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niyu.pojo.RepliesExample" resultType="java.lang.Long">
    select count(*) from replies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update replies
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.dislike != null">
        dislike = #{record.dislike,jdbcType=INTEGER},
      </if>
      <if test="record.postTime != null">
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update replies
    set id = #{record.id,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      post_id = #{record.postId,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      dislike = #{record.dislike,jdbcType=INTEGER},
      post_time = #{record.postTime,jdbcType=TIMESTAMP},
      likes = #{record.likes,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niyu.pojo.Replies">
    update replies
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="dislike != null">
        dislike = #{dislike,jdbcType=INTEGER},
      </if>
      <if test="postTime != null">
        post_time = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niyu.pojo.Replies">
    update replies
    set content = #{content,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      dislike = #{dislike,jdbcType=INTEGER},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      likes = #{likes,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>